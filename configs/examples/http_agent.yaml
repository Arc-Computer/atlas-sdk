agent:
  type: http_api
  name: example-http-agent
  system_prompt: |
    You are an HTTP-based agent that can call external services to gather information.
  tools:
    - name: web_search
      description: Search the web for relevant documents.
      parameters:
        type: object
        properties:
          query:
            type: string
            description: Query string to search for.
        required:
          - query
        additionalProperties: false
      outputSchema: null
  transport:
    base_url: http://localhost:8080/agent
    headers: {}
    timeout_seconds: 60
    retry:
      attempts: 3
      backoff_seconds: 1.0
  payload_template:
    mode: inference
  result_path:
    - data
    - output

student:
  max_plan_tokens: 2048
  max_step_tokens: 2048
  max_synthesis_tokens: 2048
  tool_choice: auto

prompt_rewrite:
  llm:
    provider: openai
    model: gpt-4o-mini
    api_key_env: OPENAI_API_KEY
    temperature: 0.1
    max_output_tokens: 1024
  max_tokens: 1024
  temperature: 0.1

teacher:
  llm:
    provider: openai
    model: gpt-4o-mini
    api_key_env: OPENAI_API_KEY
    temperature: 0.2
    max_output_tokens: 1024
  max_review_tokens: 2048
  plan_cache_seconds: 300
  guidance_max_tokens: 512
  validation_max_tokens: 512

orchestration:
  max_retries: 1
  step_timeout_seconds: 900
  rim_guidance_tag: rim_feedback
  emit_intermediate_steps: true

rim:
  small_model:
    provider: openai
    model: gpt-4o-mini
    api_key_env: OPENAI_API_KEY
    max_output_tokens: 512
  large_model:
    provider: openai
    model: gpt-4o
    api_key_env: OPENAI_API_KEY
    max_output_tokens: 768
  active_judges:
    process: true
    helpfulness: true
  variance_threshold: 0.15
  uncertainty_threshold: 0.3

storage:
  database_url: postgresql://localhost:5432/atlas
  min_connections: 1
  max_connections: 5
  statement_timeout_seconds: 30
